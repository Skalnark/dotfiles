#
# wm independent hotkeys
#

# terminal emulator
super + Return
	kitty

super + shift + Return
        xterm

super + alt + Return
        bspc rule -a \* -o state=floating rectangle=700x350+0+0 center=true && kitty

# program launcher
super + @space
	/home/skalnark/.config/polybar/shapes/scripts/launcher.sh
# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r} ; systemctl --user restart spotify-listener.service

# close and kill
#super + {_,shift + }w
#	bspc node -{c,k}
super + shift + k
        bspc node -k
super + shift + c
        bspc node -c
# alternate between the tiled and monocle layout
#super + m
#	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# swap to the biggest local in current directory
super + shift + m
	bspc node -s biggest.local

# focus the node in the given direction
super + {Left, Down, Up, Right}
	bspc node -f {west,south,north,east}
super + {j, k, i, l}
        bspc node -f {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}
super + ctrl + {j,k,i,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {j,k,i,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + shift + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Print screen
# Without the sleep scrot crashes with:
# giblib error: couldn't grab keyboard:Resource temporarily unavailable
shift + Print
    scrot $HOME/'Pictures/Screenshots/%Y-%m-%d_%H%M%S-$wx$h_scrot.png'; \
    kitty ranger $HOME/'Pictures/Screenshots/'

super + shift + s
    sleep 0.2; scrot -s -o $HOME/'Pictures/Screenshots/Print.png' && xclip -selection clipboard -target image/png $HOME/'Pictures/Screenshots/Print.png'

Print
    scrot -o $HOME/'Pictures/Screenshots/Print.png' && xclip -selection clipboard -target image/png $HOME/'Pictures/Screenshots/Print.png'

# File Manager
ctrl + alt + f
    kitty ranger $HOME

# Microphone Volume
ctrl + shift + Up
    amixer set Capture 1%+

ctrl + shift + Down
    amixer set Capture 1%-

super + ctrl + v
    amixer set Capture 20%

# Volume
super + alt + Up
    amixer set Master 1%+

super + alt + Down
    amixer set Master 1%-

#powerMenu
ctrl + shift + Delete
	/home/skalnark/.config/polybar/shapes/scripts/powermenu.sh

#dolphin
super + shift + p
    dolphin
